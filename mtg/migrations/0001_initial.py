# Generated by Django 3.1.7 on 2021-03-18 23:49

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Set',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=10)),
                ('release_date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Printing',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('border', models.CharField(choices=[(1, 'Old Border'), (2, 'Modern Border'), (3, 'Futureshifted'), (4, 'Magic 2015')], max_length=6)),
                ('border_color', models.CharField(choices=[(1, 'Black'), (2, 'White'), (3, 'Gold'), (4, 'Silver'), (5, 'Borderless')], max_length=10)),
                ('border_effect', models.CharField(blank=True, max_length=50)),
                ('has_foil', models.BooleanField()),
                ('has_nonfoil', models.BooleanField()),
                ('full_art', models.BooleanField()),
                ('languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=25), size=None)),
                ('tcgplayer', models.URLField(blank=True)),
                ('is_original_printing', models.BooleanField()),
                ('flavor_name', models.CharField(blank=True, max_length=250)),
                ('flavor_text', models.CharField(blank=True, max_length=300)),
                ('is_oversized', models.BooleanField()),
                ('is_promo', models.BooleanField()),
                ('is_textless', models.BooleanField()),
                ('is_timeshifted', models.BooleanField()),
                ('layout', models.CharField(max_length=50)),
                ('number', models.CharField(default='0', max_length=25)),
                ('uuid', models.UUIDField()),
                ('associated_cards', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), blank=True, size=None)),
                ('promo_types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('rarity', models.CharField(choices=[(1, 'Bonus'), (2, 'Common'), (3, 'Mythic'), (4, 'Rare'), (5, 'Special'), (6, 'Uncommon')], max_length=8)),
                ('side', models.CharField(blank=True, max_length=2)),
                ('original_text', models.TextField(blank=True)),
                ('original_typeline', models.CharField(blank=True, max_length=100)),
                ('watermark', models.CharField(blank=True, max_length=50)),
                ('artist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='mtg.artist')),
                ('set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mtg.set')),
            ],
        ),
        migrations.CreateModel(
            name='Card',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('ascii_name', models.CharField(max_length=250)),
                ('color_identity', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('W', 'White'), ('U', 'Blue'), ('B', 'Black'), ('R', 'Red'), ('G', 'Green'), ('C', 'Colorless')], max_length=6), size=None)),
                ('colors', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('W', 'White'), ('U', 'Blue'), ('B', 'Black'), ('R', 'Red'), ('G', 'Green'), ('C', 'Colorless')], max_length=6), size=None)),
                ('cmc', models.FloatField(blank=True)),
                ('manacost', models.CharField(blank=True, max_length=30)),
                ('reserved', models.BooleanField(default=False)),
                ('keywords', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('power', models.CharField(blank=True, max_length=10)),
                ('toughness', models.CharField(blank=True, max_length=10)),
                ('text', models.TextField(blank=True)),
                ('types', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('subtypes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('supertypes', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), blank=True, size=None)),
                ('typeline', models.CharField(blank=True, max_length=100)),
                ('printings', models.ManyToManyField(to='mtg.Printing')),
                ('sets', models.ManyToManyField(to='mtg.Set')),
            ],
        ),
    ]
